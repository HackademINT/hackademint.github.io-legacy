#!/usr/bin/python3

from binascii import hexlify
import hashlib, string

bytes_list = [157, 94, 214, 120, 254, 87, 188, 202, 97, 1, 64, 149, 122, 250, 181, 113, 76, 97, 67, 96, 218, 147, 192, 160, 65, 178, 46, 83, 125, 225, 81, 235, 13, 97, 248, 55, 12, 173, 29, 65, 47, 128, 184, 77, 20, 62, 18, 87, 165, 243, 198, 161, 27, 3, 131, 157, 70, 175, 159, 180, 60, 151, 193, 136, 93, 188, 152, 220, 201, 131, 167, 7, 40, 189, 8, 45, 26, 71, 84, 110, 129, 84, 23, 38, 127, 118, 246, 244, 96, 164, 166, 31, 157, 183, 95, 219, 178, 245, 255, 71, 67, 102, 113, 182, 229, 51, 216, 220, 54, 20, 132, 93, 217, 86, 121, 117, 33, 52, 162, 217, 235, 97, 219, 215, 185, 28, 75, 204, 45, 185, 94, 142, 26, 146, 103, 183, 161, 24, 133, 86, 178, 1, 59, 51, 12, 193, 117, 185, 192, 241, 182, 168, 49, 195, 153, 226, 105, 119, 38, 97, 123, 139, 150, 90, 212, 188, 160, 228, 26, 181, 29, 231, 179, 19, 99, 161, 178, 245, 255, 71, 67, 102, 113, 182, 229, 51, 216, 220, 54, 20, 132, 93, 177, 74, 123, 128, 89, 217, 192, 85, 149, 76, 146, 103, 76, 230, 0, 50, 134, 92, 12, 11, 74, 176, 224, 99, 229, 202, 163, 56, 124, 26, 135, 65, 3, 199, 192, 172, 227, 149, 216, 1, 130, 219, 7, 174, 44, 48, 240, 52, 177, 74, 123, 128, 89, 217, 192, 85, 149, 76, 146, 103, 76, 230, 0, 50, 37, 16, 195, 144, 17, 197, 190, 112, 65, 130, 66, 62, 58, 105, 94, 145, 168, 127, 246, 121, 162, 243, 231, 29, 145, 129, 166, 123, 117, 66, 18, 44, 75, 67, 176, 174, 227, 86, 36, 205, 149, 185, 16, 24, 155, 61, 194, 49, 130, 119, 224, 145, 13, 117, 1, 149, 180, 72, 121, 118, 22, 224, 145, 173, 177, 74, 123, 128, 89, 217, 192, 85, 149, 76, 146, 103, 76, 230, 0, 50, 111, 143, 87, 113, 80, 144, 218, 38, 50, 69, 57, 136, 217, 161, 80, 27, 12, 193, 117, 185, 192, 241, 182, 168, 49, 195, 153, 226, 105, 119, 38, 97, 123, 139, 150, 90, 212, 188, 160, 228, 26, 181, 29, 231, 179, 19, 99, 161, 15, 189, 23, 118, 225, 173, 34, 197, 154, 112, 128, 211, 92, 127, 212, 219]

""" Dictionnaire de hash pour chaque caract√®re lisible """
dico = {}
for c in string.printable:
    dico[c] = hashlib.md5(c.encode()).hexdigest()
""" """

def search_dict(value, dico):
    for key in dico:
        if dico[key] == value:
              return key
    return None


password = ''
length = 16
for i in range(0, len(bytes_list), length):
    part = bytes_list[i:i+length]
    raw_hash = b''.join([bytes([item]) for item in part])
    hex_hash = hexlify(raw_hash).decode()
    print(hex_hash)
    c = search_dict(hex_hash, dico)
    password += search_dict(hex_hash, dico)

print()
print(password)
